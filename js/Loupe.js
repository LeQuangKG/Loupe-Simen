/*	Create by: Le Viet Quang (levietquangt2@gmail.com)	Function make the loupe for image	Para :		back : image object will make loupe		div  : parent div, contain loupe		left : default left position of loupe		top  : default top position of loupe		width: width of loupe		height: height of loupe		style : name of css class that will have some style want to apply for loupe*/function Loupe(back,div,left,top,width,height,style,maker,info){	var my = this;	this.back = back;	this.div = div;	this.left = left;	this.top = top;	this.width = width;	this.height = height;	this.style = style;	this.maker = maker;	this.infoList = info;	this.isMouseDown = false;	this.showInfo = false;	this.viewDiv; this.x; this.y; this.dx; this.dy;	this.ImgDiv; this.BoundDiv; this.info; 			this.init = function(){		this.x = my.div.offsetWidth - my.width;		this.y = my.div.offsetHeight - my.height;		this.dx = my.width/2;		this.dy = my.height/2;		this.info = my.infoList[0];				my.ImgDiv = document.createElement('img');		my.ImgDiv.src = 'img/loupe.png';		my.ImgDiv.style.position="absolute";		my.ImgDiv.style.left = "-2px";		my.ImgDiv.style.top = "-2px";				my.BoundDiv = document.createElement("div");		my.BoundDiv.style.position="absolute";		my.BoundDiv.style.left = my.left + "px";		my.BoundDiv.style.top = my.top + "px";		my.BoundDiv.style.width = my.width + "px";		my.BoundDiv.style.height = my.height + "px";				my.viewDiv = document.createElement("div");		my.viewDiv.style.position="absolute";		my.viewDiv.style.left = 0 + "px";		my.viewDiv.style.top = 0 + "px";		my.viewDiv.style.width = my.width + "px";		my.viewDiv.style.height = my.height + "px";		my.viewDiv.style.backgroundImage = "url("+my.back.src+")";		my.viewDiv.style.backgroundPosition=(-my.left)+"px "+(-my.top)+"px";		my.viewDiv.setAttribute("class",my.style);				my.BoundDiv.appendChild(my.viewDiv);		my.BoundDiv.appendChild(my.ImgDiv);		my.div.appendChild(my.BoundDiv);				my.BoundDiv.addEventListener("touchstart", my.MouseDown, false);		my.BoundDiv.addEventListener("touchmove", my.MouseMove, false);		my.BoundDiv.addEventListener("touchend", my.MouseUp, false);		/*info.addEventListener("touchmove", my.MouseMove, false);		info.addEventListener("touchend", my.MouseUp, false);*/		my.BoundDiv.addEventListener("mousedown", my.MouseDown, false);		my.div.addEventListener("mousemove", my.MouseMove, false);		my.div.addEventListener("muouseup", my.MouseUp, false);	};		this.CheckLimit = function(x,y){		x = x - my.dx;		y = y - my.dy;		var point = [x,y];		if(point[0]<0) point[0] = 0;		if(point[0]>=my.x) point[0] = my.x-4;		if(point[1]<0) point[1] = 0;		if(point[1]>=my.y) point[1] = my.y-4;		return point;	}		this.MakeLoupe = function(x,y){		/*CloseInfo();*/		var point = my.CheckLimit(x,y);		my.BoundDiv.style.left = point[0] + "px";		my.BoundDiv.style.top = point[1] + "px";		my.viewDiv.style.backgroundPosition =(-point[0])+"px "+(-point[1])+"px";	};		this.MouseDown = function(e){		e.preventDefault();		my.isMouseDown = true;		var evt = e?e:(window.event);		var x,y;		if(evt.clientX){			x = evt.clientX;			y = evt.clientY;		}		else{			evt.preventDefault();			x = evt.changedTouches[0].clientX;			y = evt.changedTouches[0].clientY;		}		for(var i = 0; i < my.maker.length; i++){			if(y>my.maker[i][0]&&y<my.maker[i][0]+my.maker[i][2]&&x>my.maker[i][1]&&x<my.maker[i][1]+my.maker[i][3]){				my.OpenInfo(i);				break;			}		}	};		this.OpenInfo = function(n){		if(my.showInfo == true) {			document.body.removeChild(my.info);		}		my.info = my.infoList[n];		my.info.className = 'maker'+(n+1);		my.info.addEventListener('touchstart',my.CloseInfo,false);		my.info.addEventListener('click',my.CloseInfo,false);		document.body.appendChild(my.info);		setTimeout(function(){			my.info.style.opacity = 1;			//audio.play();		},10);		my.showInfo = true;	};		this.CloseInfo = function(){		if(my.showInfo == true){			my.info.style.opacity = 0;			setTimeout(function(){				document.body.removeChild(my.info);			},300);				my.showInfo = false;			}	};		this.MouseMove = function(e){		my.CloseInfo();		e.preventDefault();		if(my.isMouseDown==true){			var evt = e?e:(window.event);			var x,y;			if(evt.clientX){				x = evt.clientX;				y = evt.clientY;			}			else{				evt.preventDefault();				x = evt.changedTouches[0].clientX;				y = evt.changedTouches[0].clientY;			}			my.MakeLoupe(x,y);		}	};		this.MouseUp = function(){		my.isMouseDown = false;	};		this.init();}